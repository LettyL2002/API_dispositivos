import express, { json } from "express";
import chalk from "chalk";
import { networkInterfaces } from "os";
import autorRoute from "./routes/autorRoute.js";
import libroRoute from "./routes/libroRoute.js";

// Inicializaci√≥n de la app
const app = express();
const port = 7100;
app.use(json());

//* Utils
// Helper function to get local IP
function getLocalIP() {
  const nets = networkInterfaces();
  for (const name of Object.keys(nets)) {
    for (const net of nets[name]) {
      if (net.family === "IPv4" && !net.internal) {
        return net.address;
      }
    }
  }
  return "127.0.0.1";
}

// URLs
const localUrl = "http://localhost:" + port;
const networkUrl = "http://" + getLocalIP() + ":" + port;

// Rutas
app.use("/autores", autorRoute);
app.use("/libros", libroRoute);

app.listen(port, () => {
  // Server info banner
  console.log("\n" + chalk.bgBlue.white.bold(" API BIBLIOTECA ") + "\n");
  console.log(`${chalk.green("‚ú®")} ${chalk.bold("Estado del servidor:")}`);

  console.log(`${chalk.blue("üì°")} Local:            ${chalk.cyan(localUrl)}`);

  console.log(
    `${chalk.blue("üåê")} Red               ${chalk.cyan(networkUrl)}`
  );
  console.log(
    `${chalk.yellow("‚ö°")} Entorno           ${chalk.green("development")}\n`
  );

  const endpoints = [
    {
      M√©todo: "GET",
      url: localUrl + "/libros",
      Descripci√≥n: "üìö Obtiene todos los libros registrados",
    },
    {
      M√©todo: "GET",
      url: localUrl + "/libros/disponibles",
      Descripci√≥n: "‚úÖ Lista los libros disponibles para pr√©stamo",
    },
    {
      M√©todo: "GET",
      url: localUrl + "/libros/nodisponibles",
      Descripci√≥n: "‚ùå Lista los libros que est√°n prestados",
    },
    {
      M√©todo: "GET",
      url: localUrl + "/libros/:titulo",
      Descripci√≥n: "üîç Busca un libro por su t√≠tulo",
    },
    {
      M√©todo: "GET",
      url: localUrl + "/autores",
      Descripci√≥n: "üë• Lista todos los autores registrados",
    },
    {
      M√©todo: "GET",
      url: localUrl + "/autores/:nombre",
      Descripci√≥n: "üë§ Busca un autor por su nombre",
    },
  ];

  console.log(chalk.yellow.bold("üì° Endpoints disponibles:"));
  console.table(
    endpoints.map((endpoint) => ({
      M√©todo: endpoint.M√©todo,
      URL: endpoint.url,
      Descripci√≥n: endpoint.Descripci√≥n,
    }))
  );
});
